
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000100  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000184  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006b5  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000060d  00000000  00000000  000008a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000202  00000000  00000000  00000eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000010b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b1  00000000  00000000  000010fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  000014ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 4c 00 	call	0x98	; 0x98 <main>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_Z9pin_setupv>:

#include <avr/io.h>


void pin_setup(void) {
	DDRC = 0x00;
  80:	17 b8       	out	0x07, r1	; 7
	DDRB= 0xff;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	84 b9       	out	0x04, r24	; 4
	PORTB=0x00;
  86:	15 b8       	out	0x05, r1	; 5
  88:	08 95       	ret

0000008a <_Z9ADC_setupv>:

}

void ADC_setup(void){
	ADCSRA = 0x87;
  8a:	87 e8       	ldi	r24, 0x87	; 135
  8c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADMUX=0x42;
  90:	82 e4       	ldi	r24, 0x42	; 66
  92:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  96:	08 95       	ret

00000098 <main>:
}

int main(void){
	pin_setup();
  98:	0e 94 40 00 	call	0x80	; 0x80 <_Z9pin_setupv>
	ADC_setup();
  9c:	0e 94 45 00 	call	0x8a	; 0x8a <_Z9ADC_setupv>
	while(1){
		ADCSRA |= (1<<ADSC);
  a0:	ea e7       	ldi	r30, 0x7A	; 122
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	80 81       	ld	r24, Z
  a6:	80 64       	ori	r24, 0x40	; 64
  a8:	80 83       	st	Z, r24
		while ((ADCSRA&(1<<ADIF))==0);
  aa:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  ae:	84 ff       	sbrs	r24, 4
  b0:	fc cf       	rjmp	.-8      	; 0xaa <main+0x12>
		if (ADC <= 308){
  b2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  b6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  ba:	85 33       	cpi	r24, 0x35	; 53
  bc:	91 40       	sbci	r25, 0x01	; 1
  be:	18 f4       	brcc	.+6      	; 0xc6 <main+0x2e>
			PORTB=0x01;
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	85 b9       	out	0x05, r24	; 5
  c4:	ed cf       	rjmp	.-38     	; 0xa0 <main+0x8>
		} 
		else if((ADC > 308) && (ADC < 615)){
  c6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  ca:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  ce:	85 33       	cpi	r24, 0x35	; 53
  d0:	91 40       	sbci	r25, 0x01	; 1
  d2:	48 f0       	brcs	.+18     	; 0xe6 <main+0x4e>
  d4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  d8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  dc:	87 36       	cpi	r24, 0x67	; 103
  de:	92 40       	sbci	r25, 0x02	; 2
  e0:	20 f0       	brcs	.+8      	; 0xea <main+0x52>
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	03 c0       	rjmp	.+6      	; 0xec <main+0x54>
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	01 c0       	rjmp	.+2      	; 0xec <main+0x54>
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	88 23       	and	r24, r24
  ee:	19 f0       	breq	.+6      	; 0xf6 <main+0x5e>
			PORTB = 0x02;
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	85 b9       	out	0x05, r24	; 5
  f4:	d5 cf       	rjmp	.-86     	; 0xa0 <main+0x8>
		} else{
			PORTB = 0x04;
  f6:	84 e0       	ldi	r24, 0x04	; 4
  f8:	85 b9       	out	0x05, r24	; 5
  fa:	d2 cf       	rjmp	.-92     	; 0xa0 <main+0x8>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
